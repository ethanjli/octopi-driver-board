kibot:
  version: 1

global:
  output: '%f%r-%i.%x'

preflight:
  update_xml: true

filters:
  - name: 'exclude_dnp'
    type: 'generic'
    comment: 'Exclude components with value DNP'
    exclude_value: true
    keys: ['dnp', 'DNP']

outputs:
  - name: 'bom-assembly-csv'
    comment: 'Generate assembly BOM (CSV)'
    type: 'bom'
    dir: 'Assembly'
    options:
      format: 'CSV'
      csv:
        hide_pcb_info: true
        hide_stats_info: true
      number: 1
      output: '%f%r-%i.%x'
      dnf_filter: 'exclude_dnp'
      fit_field: 'Value'
      # [boolean=false] Print grouped references in the alternate compressed style eg: R1-R7,R18
      use_alt: false

  - name: 'bom-fancy-xlsx'
    comment: 'Generate fancy BOM (XLSX)'
    type: 'bom'
    dir: 'BOMs'
    options:
      format: 'XLSX'
      xlsx:
        datasheet_as_link: Datasheet
        digikey_link: Digikey ID
        title: Bill of Materials
      number: 1
      output: '%f%r-%i.%x'
      dnf_filter: 'exclude_dnp'
      fit_field: 'Value'
      # [boolean=false] Print grouped references in the alternate compressed style eg: R1-R7,R18
      use_alt: false

  - name: 'https://github.com/SchrodingersGat/KiBoM'
    comment: 'Generate assembly BOM (HTML)'
    type: 'kibom'
    dir: 'docs/bom'
    options:
      # [string|dict] BoM configuration file, relative to PCB.
      # You can also define the configuration here, will be stored in `config.kibom.ini`
      conf:
        # [list(dict)|list(string)] List of columns to display.
        # Can be just the name of the field
        # columns:
          # [string=''] Name of the field to use for this column
          # field: ''
          # [list(string)|string=''] List of fields to join to this column
          # join: ''
          # [string=''] Name to display in the header. The field is used when empty
          # name: ''
        # [list(list(string))] A series of values which are considered to be equivalent for the part name.
        # Each entry is a list of equivalen names. Example: ['c', 'c_small', 'cap' ]
        # will ensure the equivalent capacitor symbols can be grouped together.
        # If empty the following aliases are used:
        # - ['r', 'r_small', 'res', 'resistor']
        # - ['l', 'l_small', 'inductor']
        # - ['c', 'c_small', 'cap', 'capacitor']
        # - ['sw', 'switch']
        # - ['zener', 'zenersmall']
        # - ['d', 'diode', 'd_small']
        component_aliases: [['r', 'r_small', 'res', 'resistor'], ['l', 'l_small', 'inductor'], ['c', 'c_small', 'cap', 'capacitor'], ['sw', 'switch'], ['zener', 'zenersmall'], ['d', 'diode', 'd_small']]
        # [string=''] Column with links to the datasheet (HTML only)
        datasheet_as_link: 'Datasheet'
        # [string|list(string)=''] Column/s containing Digi-Key part numbers, will be linked to web page (HTML only)
        digikey_link: ''
        # [list(dict)] A series of regular expressions used to exclude parts.
        # If a component matches ANY of these, it will be excluded.
        # Column names are case-insensitive.
        # If empty the following list is used:
        exclude_any:
          - column: References
            regex: '^TP[0-9]*'
          - column: References
            regex: '^FID'
          - column: Part
            regex: 'mount.*hole'
          - column: Part
            regex: 'solder.*bridge'
          - column: Part
            regex: 'test.*point'
          - column: Footprint
            regex: 'test.*point'
          - column: Footprint
            regex: 'mount.*hole'
          - column: Footprint
            regex: 'fiducial'
          - column: References
            regex: 'LOGO'
        # [string='Config'] Field name used to determine if a particular part is to be fitted (also DNC and variants)
        fit_field: 'Variant'
        # [boolean=true] Connectors with the same footprints will be grouped together, independent of the name of the connector
        group_connectors: true
        # [list(string)] List of fields used for sorting individual components into groups.
        # Components which match (comparing *all* fields) will be grouped together.
        # Field names are case-insensitive.
        # If empty: ['Part', 'Part Lib', 'Value', 'Footprint', 'Footprint Lib'] is used
        group_fields: ['Part', 'Part Lib', 'Value', 'Footprint', 'Footprint Lib']
        # [boolean=false] Hide column headers
        hide_headers: false
        # [boolean=false] Hide project information
        hide_pcb_info: false
        # [boolean=true] Generate a separated section for DNF (Do Not Fit) components (HTML only)
        html_generate_dnf: true
        # [boolean=true] Exclude DNF (Do Not Fit) components
        ignore_dnf: true
        # [list(dict)] A series of regular expressions used to select included parts.
        # If there are any regex defined here, only components that match against ANY of them will be included.
        # Column names are case-insensitive.
        # If empty all the components are included
        # include_only:
          # [string=''] Name of the column to apply the regular expression
          # column: ''
          # `field` is an alias for `column`
          # [string=''] Regular expression to match
          # regex: ''
          # `regexp` is an alias for `regex`
        # [boolean=true] Component groups with blank fields will be merged into the most compatible group, where possible
        merge_blank_fields: true
        # [boolean=true] First column is the row number
        number_rows: true
        # [boolean=true] Each component group will be tested against a number of regular-expressions (see ``).
        test_regex: true
        # [boolean=false] Print grouped references in the alternate compressed style eg: R1-R7,R18
        use_alt: false
      # [string='HTML'] [HTML,CSV,XML,XLSX] format for the BoM
      format: 'HTML'
      # [number=1] Number of boards to build (components multiplier)
      number: 1
      # [string='%f-%i%v.%x'] filename for the output (%i=bom). Affected by global options
      output: '%f-%i%v.%x'
      # [string=','] CSV Separator
      separator: ','
      # [string=''] Board variant(s), used to determine which components
      # are output to the BoM. To specify multiple variants,
      # with a BOM file exported for each variant, separate
      # variants with the ';' (semicolon) character.
      # This isn't related to the KiBot concept of variants
      variant: ''
